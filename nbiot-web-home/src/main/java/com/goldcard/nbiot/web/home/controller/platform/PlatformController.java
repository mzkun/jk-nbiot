package com.goldcard.nbiot.web.home.controller.platform;import java.text.SimpleDateFormat;import java.util.Date;import java.util.List;import javax.servlet.http.HttpServletRequest;import org.apache.commons.lang.StringUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import com.goldcard.nbiot.common.model.Platform;import com.goldcard.nbiot.common.util.PageBase;import com.goldcard.nbiot.manager.platform.service.PlatformService;import com.goldcard.nbiot.manager.redis.JedisCacheTools;@Controller@RequestMapping("platformAction")public class PlatformController {		Logger log = LoggerFactory.getLogger(PlatformController.class);		@Autowired	public PlatformService platformService;		@RequestMapping("/getPlatformPage")	@ResponseBody	public PageBase<Platform> selectByPage(HttpServletRequest request){		log.info("查询平台");		String code = null;		if(!StringUtils.isEmpty(request.getParameter("code"))){			code = request.getParameter("code");		}		int page =Integer.parseInt(request.getParameter("page"));		int rows = Integer.parseInt(request.getParameter("rows"));//接受参数page和rows		PageBase<Platform> platforms = platformService.selectByPage(code, page, rows);		log.info("查询结束");		return platforms;	}		@RequestMapping("/getPlatformList")	@ResponseBody	public List<Platform> getList(String platform) {		log.info("查询平台");		List<Platform> platforms = platformService.getPlatformList(platform);		for (int i = 0; i < platforms.size(); i++) {			String accessToken = JedisCacheTools.getStringFromJedis(platforms.get(i).getPlatformDes());			platforms.get(i).setAccessToken(accessToken);		}		log.info("查询结束");		return platforms;	}		@RequestMapping("/getPlatformSelect")	@ResponseBody	public List<Platform> getPlatformSelect(String platform) {		List<Platform> platforms = platformService.getPlatformList(platform);		Platform plat = new Platform();		plat.setCode(null);		plat.setPlatformDes("全部");		platforms.add(plat);		return platforms;	}		@RequestMapping("/addPlatform")	@ResponseBody	public String savePlatform(String code, String platform, String app_key, String secret, String location){		log.info("创建新平台");		Platform plat = new Platform();		SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");		plat.setId(format.format(new Date()));		plat.setCode(code);		plat.setPlatform(platform);		plat.setApp_key(app_key);		plat.setSecret(secret);		plat.setLocation(location);				platformService.savePlatform(plat);		log.info("创建成功");		return "创建成功!";	}	}