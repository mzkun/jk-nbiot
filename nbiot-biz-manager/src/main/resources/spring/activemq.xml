<?xml version="1.0" encoding="GBK"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd     
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd     
	http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd     
	http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/jms
    http://www.springframework.org/schema/jms/spring-jms-4.2.xsd">

	<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestinationName" value="${jms.destination}" />
		<property name="sessionTransacted" value="true" />  
	</bean>

	<!-- 发消息  Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
		<property name="connectionFactory" ref="targetConnectionFactory" />
		<property name="maxConnections" value="${jms.maxConnections}" />
	</bean>

	<!-- 发消息  真正可以产生Connection的ConnectionFactory，由ActiveMQ提供 -->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${jms.url}" />
	</bean>

	<!-- 消息监听器 -->
	<bean id="receiveMessageListener" class="com.goldcard.nbiot.manager.activemq.receiver.ReceiveMessageListener">
		<property name="handlers">
			<map>
				<entry key="1000" value-ref="nbiotNorthHandler" />
			</map>
		</property>
	</bean>

	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- <property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="WaitForTasksToCompleteOnShutdown" value="true" /> -->
		<!-- 核心线程数  -->
	    <property name="corePoolSize" value="${jms.corePoolSize}" />
	    <!-- 最大线程数 -->
	    <property name="maxPoolSize" value="${jms.maxPoolSize}" />
	    <!-- 队列最大长度 -->
	    <property name="queueCapacity" value="${jms.queueCapacity}" />
	    <!-- 线程池维护线程所允许的空闲时间 -->
	    <property name="keepAliveSeconds" value="300" />
	    <property name="WaitForTasksToCompleteOnShutdown" value="${jms.WaitForTasksToCompleteOnShutdown}" />
	    <!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
	    <!-- <property name="rejectedExecutionHandler">
	        <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
	    </property> -->
	</bean>

	<!--这个是队列目的地 -->
	<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>${jms.destination}</value>
		</constructor-arg>
	</bean>
	
	<!-- 收消息  Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactoryRec" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
		<property name="connectionFactory" ref="targetConnectionFactoryRec" />
		<property name="maxConnections" value="${jms.maxConnections}" />
	</bean>

	<!-- 收消息连 真正可以产生Connection的ConnectionFactory，由ActiveMQ提供 -->
	<bean id="targetConnectionFactoryRec" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${jms.url}" />
	</bean>

	<!-- 消息监听容器 -->
	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactoryRec" />
		<property name="destinationName" value="${jms.destination}"/>
		<property name="messageListener" ref="receiveMessageListener" />
		<!-- 设置固定的线程数 -->
		<property name="concurrentConsumers" value="5"></property>
		<!-- 设置动态的线程数 -->
		<property name="concurrency" value="2-5"></property>
	</bean>
</beans>
